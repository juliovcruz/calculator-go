// Code generated by protoc-gen-go. DO NOT EDIT.
// source: operation-db.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EnumOp int32

const (
	EnumOp_DIVISION       EnumOp = 0
	EnumOp_MULTIPLICATION EnumOp = 1
	EnumOp_SUBTRACTION    EnumOp = 2
	EnumOp_SUM            EnumOp = 3
)

var EnumOp_name = map[int32]string{
	0: "DIVISION",
	1: "MULTIPLICATION",
	2: "SUBTRACTION",
	3: "SUM",
}

var EnumOp_value = map[string]int32{
	"DIVISION":       0,
	"MULTIPLICATION": 1,
	"SUBTRACTION":    2,
	"SUM":            3,
}

func (x EnumOp) String() string {
	return proto.EnumName(EnumOp_name, int32(x))
}

func (EnumOp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_03edd76800d9572f, []int{0}
}

type OperationDb struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Num1                 float64  `protobuf:"fixed64,2,opt,name=num1,proto3" json:"num1,omitempty"`
	Num2                 float64  `protobuf:"fixed64,3,opt,name=num2,proto3" json:"num2,omitempty"`
	Result               float64  `protobuf:"fixed64,4,opt,name=result,proto3" json:"result,omitempty"`
	Op                   EnumOp   `protobuf:"varint,5,opt,name=op,proto3,enum=EnumOp" json:"op,omitempty"`
	DateCreated          string   `protobuf:"bytes,6,opt,name=dateCreated,proto3" json:"dateCreated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperationDb) Reset()         { *m = OperationDb{} }
func (m *OperationDb) String() string { return proto.CompactTextString(m) }
func (*OperationDb) ProtoMessage()    {}
func (*OperationDb) Descriptor() ([]byte, []int) {
	return fileDescriptor_03edd76800d9572f, []int{0}
}

func (m *OperationDb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationDb.Unmarshal(m, b)
}
func (m *OperationDb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationDb.Marshal(b, m, deterministic)
}
func (m *OperationDb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationDb.Merge(m, src)
}
func (m *OperationDb) XXX_Size() int {
	return xxx_messageInfo_OperationDb.Size(m)
}
func (m *OperationDb) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationDb.DiscardUnknown(m)
}

var xxx_messageInfo_OperationDb proto.InternalMessageInfo

func (m *OperationDb) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OperationDb) GetNum1() float64 {
	if m != nil {
		return m.Num1
	}
	return 0
}

func (m *OperationDb) GetNum2() float64 {
	if m != nil {
		return m.Num2
	}
	return 0
}

func (m *OperationDb) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *OperationDb) GetOp() EnumOp {
	if m != nil {
		return m.Op
	}
	return EnumOp_DIVISION
}

func (m *OperationDb) GetDateCreated() string {
	if m != nil {
		return m.DateCreated
	}
	return ""
}

func init() {
	proto.RegisterEnum("EnumOp", EnumOp_name, EnumOp_value)
	proto.RegisterType((*OperationDb)(nil), "OperationDb")
}

func init() {
	proto.RegisterFile("operation-db.proto", fileDescriptor_03edd76800d9572f)
}

var fileDescriptor_03edd76800d9572f = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0xca, 0x2f, 0x48, 0x2d,
	0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x4d, 0x49, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x9a,
	0xc1, 0xc8, 0xc5, 0xed, 0x0f, 0x13, 0x76, 0x49, 0x12, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb2, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x4a, 0x73, 0x0d, 0x25,
	0x98, 0x80, 0x22, 0x8c, 0x41, 0x60, 0x36, 0x54, 0xcc, 0x48, 0x82, 0x19, 0x2e, 0x66, 0x24, 0x24,
	0xc6, 0xc5, 0x56, 0x94, 0x5a, 0x5c, 0x9a, 0x53, 0x22, 0xc1, 0x02, 0x16, 0x85, 0xf2, 0x84, 0xc4,
	0xb9, 0x98, 0xf2, 0x0b, 0x24, 0x58, 0x81, 0x62, 0x7c, 0x46, 0xec, 0x7a, 0xa9, 0x40, 0xb5, 0xfe,
	0x05, 0x41, 0x40, 0x21, 0x21, 0x05, 0x2e, 0xee, 0x94, 0xc4, 0x92, 0x54, 0xe7, 0xa2, 0x54, 0x20,
	0x99, 0x22, 0xc1, 0x06, 0xb6, 0x11, 0x59, 0x48, 0xcb, 0x85, 0x8b, 0x0d, 0xa2, 0x5e, 0x88, 0x87,
	0x8b, 0xc3, 0xc5, 0x33, 0xcc, 0x33, 0xd8, 0xd3, 0xdf, 0x4f, 0x80, 0x01, 0x68, 0x3d, 0x9f, 0x6f,
	0xa8, 0x4f, 0x88, 0x67, 0x80, 0x8f, 0xa7, 0xb3, 0x63, 0x08, 0x48, 0x8c, 0x51, 0x88, 0x9f, 0x8b,
	0x3b, 0x38, 0xd4, 0x29, 0x24, 0xc8, 0xd1, 0x19, 0x2c, 0xc0, 0x24, 0xc4, 0xce, 0xc5, 0x1c, 0x1c,
	0xea, 0x2b, 0xc0, 0xec, 0xc4, 0x1e, 0xc5, 0x0a, 0xf6, 0x69, 0x12, 0x1b, 0x98, 0x32, 0x06, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x63, 0xb0, 0x72, 0xb6, 0x06, 0x01, 0x00, 0x00,
}
