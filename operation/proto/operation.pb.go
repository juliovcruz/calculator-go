// Code generated by protoc-gen-go. DO NOT EDIT.
// source: operation.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EnumOp int32

const (
	EnumOp_NULL           EnumOp = 0
	EnumOp_DIVISION       EnumOp = 1
	EnumOp_MULTIPLICATION EnumOp = 2
	EnumOp_SUBTRACTION    EnumOp = 3
	EnumOp_SUM            EnumOp = 4
)

var EnumOp_name = map[int32]string{
	0: "NULL",
	1: "DIVISION",
	2: "MULTIPLICATION",
	3: "SUBTRACTION",
	4: "SUM",
}

var EnumOp_value = map[string]int32{
	"NULL":           0,
	"DIVISION":       1,
	"MULTIPLICATION": 2,
	"SUBTRACTION":    3,
	"SUM":            4,
}

func (x EnumOp) String() string {
	return proto.EnumName(EnumOp_name, int32(x))
}

func (EnumOp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_619dee0fded31cb3, []int{0}
}

type Operation struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Number1              float64  `protobuf:"fixed64,2,opt,name=number1,proto3" json:"number1,omitempty"`
	Number2              float64  `protobuf:"fixed64,3,opt,name=number2,proto3" json:"number2,omitempty"`
	Result               float64  `protobuf:"fixed64,4,opt,name=result,proto3" json:"result,omitempty"`
	Operation            string   `protobuf:"bytes,5,opt,name=operation,proto3" json:"operation,omitempty"`
	DateCreated          string   `protobuf:"bytes,6,opt,name=dateCreated,proto3" json:"dateCreated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Operation) Reset()         { *m = Operation{} }
func (m *Operation) String() string { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()    {}
func (*Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_619dee0fded31cb3, []int{0}
}

func (m *Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operation.Unmarshal(m, b)
}
func (m *Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operation.Marshal(b, m, deterministic)
}
func (m *Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operation.Merge(m, src)
}
func (m *Operation) XXX_Size() int {
	return xxx_messageInfo_Operation.Size(m)
}
func (m *Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_Operation proto.InternalMessageInfo

func (m *Operation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Operation) GetNumber1() float64 {
	if m != nil {
		return m.Number1
	}
	return 0
}

func (m *Operation) GetNumber2() float64 {
	if m != nil {
		return m.Number2
	}
	return 0
}

func (m *Operation) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *Operation) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *Operation) GetDateCreated() string {
	if m != nil {
		return m.DateCreated
	}
	return ""
}

func init() {
	proto.RegisterEnum("EnumOp", EnumOp_name, EnumOp_value)
	proto.RegisterType((*Operation)(nil), "Operation")
}

func init() {
	proto.RegisterFile("operation.proto", fileDescriptor_619dee0fded31cb3)
}

var fileDescriptor_619dee0fded31cb3 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0x2f, 0x48, 0x2d,
	0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x5a, 0xce, 0xc8, 0xc5,
	0xe9, 0x0f, 0x13, 0x13, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c,
	0x02, 0xb2, 0x84, 0x24, 0xb8, 0xd8, 0xf3, 0x4a, 0x73, 0x93, 0x52, 0x8b, 0x0c, 0x25, 0x98, 0x80,
	0x82, 0x8c, 0x41, 0x30, 0x2e, 0x42, 0xc6, 0x48, 0x82, 0x19, 0x59, 0xc6, 0x48, 0x48, 0x8c, 0x8b,
	0xad, 0x28, 0xb5, 0xb8, 0x34, 0xa7, 0x44, 0x82, 0x05, 0x2c, 0x01, 0xe5, 0x09, 0xc9, 0x70, 0x71,
	0xc2, 0x2d, 0x97, 0x60, 0x05, 0x5b, 0x81, 0x10, 0x10, 0x52, 0xe0, 0xe2, 0x4e, 0x49, 0x2c, 0x49,
	0x75, 0x2e, 0x4a, 0x05, 0x92, 0x29, 0x12, 0x6c, 0x60, 0x79, 0x64, 0x21, 0x2d, 0x3f, 0x2e, 0xb6,
	0x54, 0xa0, 0x1d, 0xfe, 0x05, 0x42, 0x1c, 0x5c, 0x2c, 0x7e, 0xa1, 0x3e, 0x3e, 0x02, 0x0c, 0x42,
	0x3c, 0x5c, 0x1c, 0x2e, 0x9e, 0x61, 0x9e, 0xc1, 0x9e, 0xfe, 0x7e, 0x02, 0x8c, 0x42, 0x42, 0x5c,
	0x7c, 0xbe, 0xa1, 0x3e, 0x21, 0x9e, 0x01, 0x3e, 0x9e, 0xce, 0x8e, 0x21, 0x20, 0x31, 0x26, 0x21,
	0x7e, 0x2e, 0xee, 0xe0, 0x50, 0xa7, 0x90, 0x20, 0x47, 0x67, 0xb0, 0x00, 0xb3, 0x10, 0x3b, 0x17,
	0x73, 0x70, 0xa8, 0xaf, 0x00, 0x8b, 0x13, 0x7b, 0x14, 0x2b, 0x38, 0x08, 0x92, 0xd8, 0xc0, 0x94,
	0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xd3, 0x07, 0x8a, 0x1c, 0x01, 0x00, 0x00,
}
